import{v as m,_ as l}from"./runtime.BtYRUgJo.js";import{o as w}from"./index-client.8TZSItko.js";import{w as v}from"./index.svelte.JYs1x1jk.js";import{i as b}from"./is.svelte.DhDKMixu.js";import{d as M}from"./configurable.BpG3mneI.js";import{t as O,n as S,b as h}from"./utils.svelte.BDOzgmnI.js";function x(i,u,a={}){const{autoCleanup:s=!0,window:r=M,...d}=a;let t;const o=b(()=>r!==void 0&&"MutationObserver"in r),f=l(()=>new Set(O(i).map(S).filter(h)));v(()=>m(f),n=>{e(),o.current&&n.size&&(t=new MutationObserver(u),n.forEach(c=>t.observe(c,d)))},{runOnMounted:!0}),s&&w(()=>{e()});function p(){return t==null?void 0:t.takeRecords()}function e(){t&&(t.disconnect(),t=void 0)}return{get isSupported(){return o.current},cleanup:e,takeRecords:p}}export{x as o};
