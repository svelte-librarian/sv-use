import{t as O,a as j,f as E}from"./disclose-version.DBoScU1a.js";import{D as w,w as x,v as t,_ as M,p as N,c as a,s as _,t as V,a as C,b as A,r as i}from"./runtime.BtYRUgJo.js";import{s as W}from"./render.B0azeTSR.js";import{r as q,b as B}from"./attributes.yrSLWYUD.js";import{p as S}from"./proxy.pxA-SMcc.js";import{b as y}from"./this.Ckp3tthg.js";import{o as F}from"./index-client.8TZSItko.js";import{w as G}from"./index.svelte.JYs1x1jk.js";import{i as H}from"./is.svelte.DhDKMixu.js";import{a as J,d as K}from"./configurable.BpG3mneI.js";import{a as I,n as D,t as L,b as P}from"./utils.svelte.BDOzgmnI.js";function Q(g,k,p={}){const{root:u=J,rootMargin:h="0px",threshold:o=0,autoCleanup:v=!0,window:n=K,immediate:f=!0}=p,l=H(()=>n!==void 0&&"IntersectionObserver"in n),d=M(()=>L(g).map(D).filter(P));let r=I,s=w(S(f));l.current&&G([()=>t(d),()=>D(u),()=>t(s)],([m,z])=>{if(r(),!t(s)||!m.length)return;const e=new IntersectionObserver(k,{root:z,rootMargin:h,threshold:o});m.forEach(b=>b&&e.observe(b)),r=()=>{e.disconnect(),r=I}},{runOnMounted:f}),v&&F(()=>{c()});function c(){r(),x(s,!1)}return{get isSupported(){return l.current},get isActive(){return t(s)},pause:c,cleanup:c,resume(){x(s,!0)}}}var R=O(`<div class="relative flex w-full flex-col gap-5"><div class="flex w-full items-center justify-center gap-2"><label class="dark:text-zinc-200"><input type="checkbox"> Is Active</label></div> <div class="border-svelte/50 dark:border-darksvelte/50 relative h-[200px] w-full overflow-y-scroll border-2 border-dashed"><div class="relative flex h-[600px] w-full justify-center"><span class="mt-5 italic text-zinc-500 dark:text-zinc-400">Scroll down...</span> <div class="border-svelte dark:border-darksvelte absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 border-2 border-dashed p-5 dark:text-zinc-200">i'm the target element</div></div></div> <p class="mx-auto dark:text-zinc-200">Element <span class="text-svelte dark:text-darksvelte font-semibold"> </span> the viewport</p></div>`);function ie(g,k){N(k,!0);let p=w(void 0),u=w(void 0),h=w(!1);const o=Q(()=>t(u),([e])=>{x(h,S((e==null?void 0:e.isIntersecting)||!1))},{root:()=>t(p)});var v=R(),n=a(v),f=a(n),l=a(f);q(l),l.__change=function(...e){var b;(b=o.isActive?o.pause:o.resume)==null||b.apply(this,e)},A(),i(f),i(n);var d=_(n,2),r=a(d),s=_(a(r),2);y(s,e=>x(u,e),()=>t(u)),i(r),i(d),y(d,e=>x(p,e),()=>t(p));var c=_(d,2),m=_(a(c)),z=a(m,!0);i(m),A(),i(c),i(v),V(()=>{B(l,o.isActive),W(z,t(h)?"inside":"outside")}),j(g,v),C()}E(["change"]);export{ie as default};
